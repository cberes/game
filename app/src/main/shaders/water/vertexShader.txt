#version 140

const float tiling = 4.0;

uniform vec3 lightPosition[4];
uniform vec3 cameraPosition;
uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;
uniform mat4 modelMatrix;

in vec2 position;

out vec4 clipSpaceCoords;
out vec2 textureCoords;
out vec3 toCameraVector;
out vec3 fromLightVector[4];

void main(void) {
	vec4 worldPosition = modelMatrix * vec4(position.x, 0.0, position.y, 1.0);
	clipSpaceCoords = projectionMatrix * viewMatrix * worldPosition;
	gl_Position = clipSpaceCoords;
	textureCoords = vec2(position.x / 2.0 + 0.5, position.y / 2.0 + 0.5) * tiling;
	toCameraVector = cameraPosition - worldPosition.xyz;
	for (int i = 0; i < 4; ++i) {
		fromLightVector[i] = worldPosition.xyz - lightPosition[i];
	}
}